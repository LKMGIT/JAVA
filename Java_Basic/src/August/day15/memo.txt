리소르란?
-> 데이터를 제공하는 객체.
    DAO (Data Access Object) -> 데이터 처리 객체.
    DTO (Data Transfer Object) -> 데이터 전송 객체
    VO ( Value Object) -> 데이터 객체

    리소스를 사용하기 위해서는 반드시 열어야 한다. -> open();
    리로스 사용이 끝난 후에는 닫아야만 한다. -> close();

제네릭이란
정의되지 않은 타입을 파라미터로 처리하고 실제 사용할 때 파라티머를 구체적인 타입으로 대체시키는
객체를 저장할 때 저장할 내용물의 타입을 미리 알려주고, 읽을 때 어떤 타입으로 제공할지를 알게 표시
Box는 content에 무엇이 대입되고, 읽을 때 어떤 타입으로 제공할지를 알게 정하느 ㄴ것

public class Box <T>{
    public T content;

}

Box<String> box = new Box<>();

T 파라미터로 제공되는 것은 클래스타입, 인터페이스 타입 만 가능하다.

타입 파리미터 기호
<T> -> 타입
<E> -> 요소 Element, List
<K> - . Key, Map
<V> -> value, 리턴값, 매핑값,
<N> -> 숫자
<S,U,V> -> 2,3,4 선언된 타입

자료구조
대량의 데이터를 효율적으로 관리할 수 있는 데이터의 구조
특성에 따라, 체계적으로 데이터를 구조화 해야 한다.
- 어떤 데이터 구조를 사용하느냐에 따라서 코드의 효율성이 달라진다.

알고리즘 이란?
문제를 해결 하는 절차, 과정
어떤 문제에 대해, 특정한 입력 넣으면, 원하는 출력을 얻을 수 있도록 만드는 프로그래밍

컬렉션
1) List 계열 (객체의 저장 순서가 있고, 중복 하용)
2) Set 계열 (저장 순ㅅ가 없고, 중복을 허용하지 않는다
3) Map Key:Value 가 한쌍 중복 키값은 중복(X)


자료구조
Queue : FIFO
1. Enqueue : 큐에 데이터를 넣기 - add(value), offer(value)
2. Dequeue : 큐에서 데이터를 꺼내기 - p